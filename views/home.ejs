<!DOCTYPE html>
<html>
<head>
	<title>Home</title>

	<style type="text/css">
		

	</style>

	<%- include partials/scripts.ejs %>
</head>
<body>


	<h1>You are logged in the following devices</h1>

	<button id='logout'>Logout</button>


	<table id='output'></table>
	<script type="text/javascript">
		
		window.referrer = '<%- locals && locals.referrer ? JSON.stringify(referrer) : '' %>';
		
				
	</script>
	<script type="text/javascript" src='/js/global.js'></script>
	<script type="text/javascript">

		'use strict';


		(function() {

			
			let accessToken = window.localStorage.access_token;


			function fetchTokens(accessToken) {

	
				return fetch('/tokens', {
					method: 'get',
					headers: {
						'Content-Type': 'application/json',
	     				'Authorization': 'Bearer ' + accessToken
					},
				}).then((response) => {
					console.log(response)
					return response.json()
				})
			}

			function retryMechanism(fn, accessToken, throttle) {
				console.log('retryMechanism', throttle)
				accessToken = window.localStorage.access_token;
				return fn(accessToken)
				.then((response) => {
					if (!response.success) {
						if (response.error_type === 'Bad Request') {

							return new Promise((resolve, reject) => {
								setTimeout(() => {
									if (throttle < 3) {
										resolve(retryMechanism(fn, accessToken, throttle + 1))
									}
								}, 500)
							})
							
						}
					}
					return response;
				});
			}

			retryMechanism(fetchTokens, accessToken, 0)
			.then((results) => {
				console.log('fetchTokens:Results', results)
				if (!results) return;
				if (!results.success) return;

				const output = document.getElementById('output');
				output.innerHTML += `
					<tr>
						<td>OS</td>
						<td>Browser</td>
						<td>Created At</td>
						<td>Updated At</td>
						<td>Access Token</td>
						<td>Refresh Token</td>
						<td>Actions</td>
					</tr>
				`
				results.results.map((model) => {
					output.innerHTML += `
						<tr>
							<td>${ model.os }</td>
							<td>${ model.browser }</td>
							<td>${ model.created_at }</td>
							<td>${ model.updated_at }</td>
							<td>${ model.access_token ? model.access_token.substring(0, 20) + '...' : null }</td>
							<td>${ model.refresh_token.substring(0, 20)  + '...'}</td>
							<td>
								<button>Delete</button>
							</td>
						</tr>
					`
				})
			}).catch((err) => {
				console.log('fetchTokensError', err)
			})


			const logout = document.getElementById('logout');
			logout.addEventListener('click', (evt) => {
				window.localStorage.removeItem('access_token');
				window.localStorage.removeItem('refresh_token');

				window.location.href = '/register';
			}, false);

		})()
		
	</script>
</body>
</html>